/* tslint:disable */
/* eslint-disable */
/**
 * Thalassa API
 * API for ocean data exploration and AI co-pilot
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime'
import type { HealthResponse, WelcomeResponse } from '../models/index'
import {
    HealthResponseFromJSON,
    HealthResponseToJSON,
    WelcomeResponseFromJSON,
    WelcomeResponseToJSON,
} from '../models/index'

/**
 *
 */
export class DefaultApi extends runtime.BaseAPI {
    /**
     * Health check endpoint
     */
    async getHealthRaw(
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<runtime.ApiResponse<HealthResponse>> {
        const queryParameters: any = {}

        const headerParameters: runtime.HTTPHeaders = {}

        let urlPath = `/health`

        const response = await this.request(
            {
                path: urlPath,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            },
            initOverrides
        )

        return new runtime.JSONApiResponse(response, (jsonValue) =>
            HealthResponseFromJSON(jsonValue)
        )
    }

    /**
     * Health check endpoint
     */
    async getHealth(
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<HealthResponse> {
        const response = await this.getHealthRaw(initOverrides)
        return await response.value()
    }

    /**
     * Root endpoint
     */
    async getWelcomeRaw(
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<runtime.ApiResponse<WelcomeResponse>> {
        const queryParameters: any = {}

        const headerParameters: runtime.HTTPHeaders = {}

        let urlPath = `/`

        const response = await this.request(
            {
                path: urlPath,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            },
            initOverrides
        )

        return new runtime.JSONApiResponse(response, (jsonValue) =>
            WelcomeResponseFromJSON(jsonValue)
        )
    }

    /**
     * Root endpoint
     */
    async getWelcome(
        initOverrides?: RequestInit | runtime.InitOverrideFunction
    ): Promise<WelcomeResponse> {
        const response = await this.getWelcomeRaw(initOverrides)
        return await response.value()
    }
}
